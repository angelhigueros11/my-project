// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pruebas en <UserLogin /> Renders correctly with params 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#143590",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 0.3,
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontSize": 40,
          "fontWeight": "bold",
        }
      }
    >
      Health
    </Text>
    <Text
      style={
        Object {
          "color": "#00c9cc",
          "fontSize": 40,
          "fontWeight": "bold",
        }
      }
    >
      Forms
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#143590",
        "flex": 0.5,
        "width": "80%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      onChangeText={[Function]}
      placeholder="Correo"
      placeholderTextColor="#fff"
      rejectResponderTermination={true}
      style={
        Object {
          "backgroundColor": "#143590",
          "borderBottomColor": "#fff",
          "borderBottomWidth": 1,
          "color": "#fff",
          "height": 40,
          "marginTop": 50,
          "width": "80%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#143590",
          "borderColor": "white",
          "flexDirection": "row",
          "marginTop": 10,
          "width": "80%",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        enablesReturnKeyAutomatically={true}
        name="password"
        onChangeText={[Function]}
        placeholder="Contraseña"
        placeholderTextColor="#fff"
        rejectResponderTermination={true}
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "#143590",
            "borderBottomColor": "#fff",
            "borderBottomWidth": 1,
            "color": "white",
            "height": 40,
            "marginTop": 20,
            "width": "100%",
          }
        }
        textContentType="newPassword"
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "right": 20,
            "top": 10,
          }
        }
      >
        <Text />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#0657a2",
          "borderRadius": 15,
          "color": "#fff",
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "position": "relative",
          "top": 60,
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        Iniciar Sesión
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#143590",
          "borderRadius": 15,
          "color": "#fff",
          "height": 40,
          "justifyContent": "center",
          "marginTop": 20,
          "opacity": 1,
          "position": "relative",
          "top": 60,
          "width": "80%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#fff",
          }
        }
      >
        Crear perfil
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`Pruebas en <UserLogin /> Renders correctly without params 1`] = `
<View>
  <Text>
    ERROR
  </Text>
</View>
`;
